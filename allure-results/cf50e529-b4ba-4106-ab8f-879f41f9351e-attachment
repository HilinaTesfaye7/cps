# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: test
- Location: C:\Users\ENVY\Documents\cps Automation\tests\authorized\merchant_createc.spec.js:4:1

# Error details

```
Error: locator.click: Error: strict mode violation: getByText('Account Number') resolved to 2 elements:
    1) <p class="">Account Number:</p> aka getByText('Account Number:')
    2) <span>Account Number</span> aka getByText('Account Number', { exact: true })

Call log:
  - waiting for getByText('Account Number')

    at C:\Users\ENVY\Documents\cps Automation\tests\authorized\merchant_createc.spec.js:77:42
```

# Page snapshot

```yaml
- main:
  - heading "Dashen Bank Super App Central Dashboard Portal" [level=4]
  - text: B
  - paragraph: binic
  - text: CHECKER
  - img
  - img
  - paragraph: cu
  - button "Details":
    - text: Details
    - img
  - link "Back to Home"
  - link "Reject":
    - button "Reject"
  - button "Approve"
  - heading "Merchant Informations" [level=2]
  - paragraph: "Account Number:"
  - heading "1237141193012" [level=2]
  - paragraph: "Account Holder Name:"
  - heading "EDUCATION DEVELOPMENT TRUST" [level=2]
  - paragraph: "Merchant Name:"
  - heading "cu" [level=2]
  - paragraph: "Phone Number:"
  - heading "+251947599467" [level=2]
  - paragraph: "Email:"
  - heading "kiya@gmail.com" [level=2]
  - button "Transactions"
  - button "Agents"
  - text: "Total Transactions Count:"
  - paragraph: "0"
  - img
  - textbox
  - button:
    - img
  - heading "Filters:" [level=2]
  - searchbox
  - img
  - table:
    - rowgroup:
      - row "Transaction ID Date & Time Sender Name Sender Account Amount Agent Name Status Action":
        - columnheader "Transaction ID"
        - columnheader "Date & Time"
        - columnheader "Sender Name"
        - columnheader "Sender Account"
        - columnheader "Amount"
        - columnheader "Agent Name"
        - columnheader "Status"
        - columnheader "Action"
    - rowgroup:
      - row "No Data":
        - cell "No Data":
          - img
          - paragraph: No Data
  - text: "Rows per page:"
  - button "10":
    - text: "10"
    - img
  - list:
    - listitem "Previous Page":
      - img
    - listitem "1"
    - listitem "Next Page":
      - img
- region "Notifications alt+T"
- alert
```

# Test source

```ts
   1 |
   2 | const { test, expect } = require('@playwright/test');
   3 |
   4 | test('test', async ({ page }) => {
   5 |   // Variable to store the OTP
   6 |   let otp = null;
   7 |
   8 |   // Listen for network responses
   9 |   page.on('response', async (response) => {
  10 |     const url = response.url(); // Get the URL of the response
  11 |
  12 |     // Check if the response URL matches the specific endpoint
  13 |     if (url.includes('https://sau.eaglelionsystems.com/v1.0/chatbirrapi/cpsauth/otp/request/dashops')) {
  14 |       console.log(`Response URL: ${url}`);
  15 |
  16 |       // Get the response body as JSON
  17 |       try {
  18 |         const responseBody = await response.json(); // Parse the response body as JSON
  19 |         console.log('Response Body:', responseBody);
  20 |
  21 |         // Extract the OTP from the response body
  22 |         if (responseBody.otpcode) {
  23 |           otp = responseBody.otpcode; // Assuming the OTP is in a field named "otpcode"
  24 |           console.log(`OTP: ${otp}`);
  25 |         } else {
  26 |           console.error('OTP not found in the response body.');
  27 |         }
  28 |       } catch (error) {
  29 |         console.error('Failed to parse response body as JSON:', error);
  30 |       }
  31 |     }
  32 |   });
  33 |
  34 |   // Navigate to the login page
  35 |   await page.goto('https://sau-dbsa.vercel.app');
  36 |
  37 |   // Enter the username and request OTP
  38 |   await page.getByPlaceholder('Enter Your username').click();
  39 |   await page.getByPlaceholder('Enter Your username').fill('binic');
  40 |   await page.getByRole('button', { name: 'Get OTP' }).click();
  41 |
  42 |   // Wait for the OTP to be captured (adjust timeout as needed)
  43 |   await page.waitForTimeout(5000); // Wait for 5 seconds
  44 |
  45 |   // Check if the OTP was captured
  46 |   if (!otp) {
  47 |     throw new Error('user not found');
  48 |   }
  49 |
  50 |   // Split the OTP into individual digits
  51 |   const otpDigits = otp.split('');
  52 |   if (otpDigits.length !== 6) {
  53 |     throw new Error('OTP must be 6 digits long.');
  54 |   }
  55 |
  56 |   // Fill the OTP into the input boxes
  57 |   for (let i = 0; i < 6; i++) {
  58 |     const inputSelector = `.rizzui-pin-code-field:nth-child(${i + 1})`;
  59 |     await page.locator(inputSelector).fill(otpDigits[i]);
  60 |   }
  61 |
  62 |   // Click the "Next" button
  63 |   await page.getByRole('button', { name: 'Next' }).click();
  64 |
  65 |   // Enter the password and sign in
  66 |   await page.getByPlaceholder('Enter Your Password').click();
  67 |   await page.getByPlaceholder('Enter Your Password').fill('Admin@7');
  68 |   await page.getByRole('button', { name: 'Sign In' }).click();
  69 |
  70 |   await page.getByRole('button').filter({ hasText: /^$/ }).nth(4).click();
  71 |   await page.getByRole('link', { name: 'Merchants Merchants List of' }).click();
  72 |   await page.getByPlaceholder('Search...').click();
  73 |   await page.getByPlaceholder('Search...').fill('cu');
  74 |   await page.getByRole('button').nth(2).click();
  75 |   await page.getByRole('row', { name: '1129884 cu +251947599467' }).getByRole('link').click();
  76 |   await page.getByRole('button', { name: 'Reject' }).click();
> 77 |   await page.getByText('Account Number').click();
     |                                          ^ Error: locator.click: Error: strict mode violation: getByText('Account Number') resolved to 2 elements:
  78 |   await page.getByRole('button', { name: 'Reject' }).click();
  79 |   await page.getByRole('heading', { name: '1611' }).click();
  80 |   await page.getByRole('button', { name: 'Reject' }).click();
  81 |   await page.waitForTimeout(5000);
  82 | });
```